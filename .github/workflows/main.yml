name: Build Dashboard Packages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022, macos-13, macos-14]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      # Windows ‰∏ìÁî® MongoDB ‰∏ãËΩΩ
      - name: Download MongoDB (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Write-Output "üîΩ Downloading MongoDB for Windows..."
          Invoke-WebRequest -Uri https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-6.0.18.zip -OutFile mongodb.zip
          Expand-Archive mongodb.zip -DestinationPath .
          New-Item -ItemType Directory -Force -Path mongodb/bin | Out-Null
          Write-Output "üîç Searching for mongod.exe..."
          Get-ChildItem -Recurse -Filter mongod.exe | ForEach-Object { Write-Output "Found mongod.exe at: $($_.FullName)" }
          $mongodPath = (Get-ChildItem -Recurse -Filter mongod.exe | Select-Object -First 1).FullName
          Copy-Item -Path $mongodPath -Destination mongodb/bin/
          Write-Output "üìÇ Files inside mongodb/bin:"
          Get-ChildItem mongodb/bin

      # macOS ‰∏ìÁî® MongoDB ‰∏ãËΩΩ
      - name: Download MongoDB (macOS)
        if: runner.os == 'macOS'
        shell: bash
        run: |
          echo "üîΩ Downloading MongoDB for macOS..."
          if [[ "$(uname -m)" == "x86_64" ]]; then
            curl -L -o mongodb.tgz https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-6.0.18.tgz
          else
            curl -L -o mongodb.tgz https://fastdl.mongodb.org/osx/mongodb-macos-arm64-6.0.18.tgz
          fi
          tar -xzf mongodb.tgz
          mkdir -p mongodb/bin
          cp */bin/mongod mongodb/bin/ || echo "‚ö†Ô∏è mongod not found"
          chmod +x mongodb/bin/mongod || true
          echo "üìÇ Files inside mongodb/bin:"
          ls -l mongodb/bin

      # ÊûÑÂª∫ÂèØÊâßË°åÊñá‰ª∂
      - name: Build executable (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          pyinstaller --onefile --windowed run_app.py --add-binary "mongodb/bin/mongod.exe;mongodb/bin"

      - name: Build executable (macOS)
        if: runner.os == 'macOS'
        shell: bash
        run: |
          pyinstaller --onefile --windowed run_app.py --add-binary "mongodb/bin/mongod:mongodb/bin"

      # ÊâìÂåÖÁõÆÂΩï
      - name: Prepare package
        run: |
          mkdir package
          cp -r dist/* package/
          cp -r charts package/
          cp -r services package/
          cp app.py package/
          cp run_app.py package/
          cp requirements.txt package/
          mkdir -p package/mongodb/data

      # ÂéãÁº©Êñá‰ª∂
      - name: Zip package (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path package/* -DestinationPath ManlyFarm_Windows.zip

      - name: Zip package (macOS)
        if: runner.os == 'macOS'
        shell: bash
        run: |
          if [[ "$(uname -m)" == "x86_64" ]]; then
            zip -r ManlyFarm_Mac_Intel.zip package
          else
            zip -r ManlyFarm_Mac_ARM.zip package
          fi

      # ‰∏ä‰º†ÊûÑÂª∫‰∫ßÁâ©
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-package
          path: "*.zip"
